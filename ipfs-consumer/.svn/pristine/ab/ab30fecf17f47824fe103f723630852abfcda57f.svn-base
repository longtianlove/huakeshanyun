package com.stys.ipfs.web;

import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.dubbo.config.annotation.Reference;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import com.stys.ipfs.dto.ResultInfo;
import com.stys.ipfs.entity.TbProduct;
import com.stys.ipfs.service.ITbProductService;

import java.util.Arrays;
import java.util.List;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.stereotype.Controller;

/**
 * <p>
 * 前端控制器
 * </p>
 *
 * @author dp
 * @since 2019-01-12
 */
@Controller
@RequestMapping("/tbMerchandise")
public class TbTbProductController {
	@Reference(version = "1.0.0", check = false)
	private ITbProductService itbProductService;

	@RequestMapping("/*")
	public void toHtml() {

	}

	@RequestMapping("/listData")
	@RequiresPermissions("tbMerchandise:view")
	public @ResponseBody ResultInfo<List<TbProduct>> listData(TbProduct tbMerchandise, Integer page,
			Integer limit) {
		EntityWrapper<TbProduct> wrapper = new EntityWrapper<>(tbMerchandise);
		Page<TbProduct> pageObj = itbProductService.selectPage(new Page<TbProduct>(page, limit), wrapper);
		return new ResultInfo<>(pageObj.getRecords(), pageObj.getTotal());
	}
	
	@RequestMapping("/selectData")
	public @ResponseBody List<TbProduct> selectData() {
	 
		return itbProductService.selectList(null); 
	}

	@RequestMapping("/add")
	@RequiresPermissions("tbMerchandise:add")
	public @ResponseBody ResultInfo<Boolean> add(TbProduct tbMerchandise) {
		boolean b = itbProductService.insert(tbMerchandise);
		return new ResultInfo<>(b);
	}

	@RequestMapping("/delBatch")
	@RequiresPermissions("tbMerchandise:del")
	public @ResponseBody ResultInfo<Boolean> delBatch(Integer[] idArr) {
		boolean b = itbProductService.deleteBatchIds(Arrays.asList(idArr));
		return new ResultInfo<>(b);
	}

	@RequestMapping("/edit")
	@RequiresPermissions("tbMerchandise:edit")
	public @ResponseBody ResultInfo<Boolean> edit(TbProduct tbMerchandise) {
		boolean b = itbProductService.updateById(tbMerchandise);
		return new ResultInfo<>(b);
	}
}
