package com.stys.ipfs.web;

import com.alibaba.dubbo.config.annotation.Reference;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.baomidou.mybatisplus.plugins.Page;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import java.util.*;

import com.stys.ipfs.dto.ResultInfo;
import com.stys.ipfs.entity.TbOfflinePayment;
import com.stys.ipfs.service.ITbOfflinePaymentService;
import org.springframework.stereotype.Controller;

/**
 * <p>
 *  前端控制器
 * </p>
 *
 * @author dp
 * @since 2019-03-21
 */
@Controller
@RequestMapping("/tbOfflinePayment")
public class TbOfflinePaymentController extends BaseController {

    @Reference(version = "1.0.0", check = false)
    private ITbOfflinePaymentService itbOfflinePaymentService;

    @RequestMapping("/*")
    public void toHtml(){

    }

    @RequestMapping("/listData")
    @RequiresPermissions("tbOfflinePayment:view")
    public @ResponseBody
        ResultInfo<List<TbOfflinePayment>> listData(TbOfflinePayment tbOfflinePayment, Integer page, Integer limit){
        EntityWrapper<TbOfflinePayment> wrapper = new EntityWrapper<>(tbOfflinePayment);
        Page<TbOfflinePayment> pageObj = itbOfflinePaymentService.selectPage(new Page<TbOfflinePayment>(page,limit), wrapper);
        return new ResultInfo<>(pageObj.getRecords(), pageObj.getTotal());
    }

    @RequestMapping("/add")
    @RequiresPermissions("tbOfflinePayment:add")
    public @ResponseBody
        ResultInfo<Boolean> add(TbOfflinePayment tbOfflinePayment){
        boolean b = itbOfflinePaymentService.insert(tbOfflinePayment);
        return new ResultInfo<>(b);
    }

    @RequestMapping("/delBatch")
    @RequiresPermissions("tbOfflinePayment:del")
    public @ResponseBody
        ResultInfo<Boolean> delBatch(Integer[] idArr){
        boolean b = itbOfflinePaymentService.deleteBatchIds(Arrays.asList(idArr));
        return new ResultInfo<>(b);
    }

    @RequestMapping("/edit")
    @RequiresPermissions("tbOfflinePayment:edit")
    public @ResponseBody
        ResultInfo<Boolean> edit(TbOfflinePayment tbOfflinePayment){
        boolean b = itbOfflinePaymentService.updateById(tbOfflinePayment);
        return new ResultInfo<>(b);
    }
    /**
     * 	充值
     * @param tbOfflinePayment
     * @return
     */
    @RequestMapping("/recharge")
    public @ResponseBody
    ResultInfo<Boolean> getRecharge(Integer id){
    	TbOfflinePayment tbOfflinePayment=itbOfflinePaymentService.selectById(id);
    	tbOfflinePayment.setStatus(1);
    	 boolean b = itbOfflinePaymentService.updateById(tbOfflinePayment);
    	return new ResultInfo<>(b);
    }

}

